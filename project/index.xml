<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Projects | David Aparicio</title><link>/project/</link><atom:link href="/project/index.xml" rel="self" type="application/rss+xml"/><description>Projects</description><generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><copyright>Â© 2025 David Aparicio</copyright><lastBuildDate>Fri, 11 Apr 2025 23:00:00 +0000</lastBuildDate><image><url>/media/icon_hu5f90374de83a434faccdfc0ad39c44da_563627_512x512_fill_lanczos_center_3.png</url><title>Projects</title><link>/project/</link></image><item><title>Bugfixer (1st place Hackathon Dust AI Agent)</title><link>/project/dust_hackathon2025/</link><pubDate>Fri, 11 Apr 2025 23:00:00 +0000</pubDate><guid>/project/dust_hackathon2025/</guid><description>&lt;p>Groundbreaking demo showcasing our innovative AI agent, designed to streamline bug fixes and enhance productivity! ðŸš€&lt;/p>
&lt;p>In this project, we dive into the capabilities of our AI agent, built during the Echathan event. This agent is a game-changer for non-technical users like Project Managers (PMs) and Customer Success Managers (CSMs), empowering them to fix functional bugs without involving the engineering team.&lt;/p>
&lt;p>Why This Matters:&lt;/p>
&lt;pre>&lt;code>Time-Saving: Reduce the workload on your engineering team.
Customer Satisfaction: Fix bugs faster and keep your customers happy.
Efficiency: Streamline your workflow and minimize frustration.
&lt;/code>&lt;/pre>
&lt;p>Join us on this journey as we make bug fixing smarter, faster, and more efficient. Stay tuned for more updates and innovations! ðŸŒŸ&lt;/p>
&lt;p>Technical Stack Details:&lt;/p>
&lt;ul>
&lt;li>Smolagents&lt;/li>
&lt;li>MCP (GitHub)&lt;/li>
&lt;li>Python&lt;/li>
&lt;li>Dust.tt API&lt;/li>
&lt;li>Notion&lt;/li>
&lt;/ul>
&lt;p>Team12 composed by: Simon Cleriot, Khaled Khebbeb, Jarek Ecke &amp;amp; David Aparicio.&lt;/p>
&lt;h2 id="project-demonstration">Project demonstration&lt;/h2>
&lt;iframe width="560" height="315" src="https://www.youtube-nocookie.com/embed/_nifTEl5JXg" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen>&lt;/iframe>
&lt;div class="alert alert-note">
&lt;div>
More information on my &lt;a href="/post/dust_hackathon2025/">blog post&lt;/a> or the &lt;a href="https://dusthq.substack.com/i/162575165/long-live-the-builders-ai-agents-hackathon-winners" target="_blank" rel="noopener">Dust.tt newsletter&lt;/a>.
&lt;/div>
&lt;/div></description></item><item><title>Ambari to Opsgenie</title><link>/project/ambari-to-opsgenie/</link><pubDate>Mon, 29 Apr 2024 00:00:00 +0000</pubDate><guid>/project/ambari-to-opsgenie/</guid><description>&lt;p>The project &amp;ldquo;ambari-to-opsgenie&amp;rdquo; is a Go server that forwards &lt;a href="https://ambari.apache.org/" target="_blank" rel="noopener">Ambari&lt;/a> alerts to &lt;a href="https://www.atlassian.com/software/opsgenie" target="_blank" rel="noopener">OpsGenie&lt;/a>. It includes additional features such as integration with &lt;a href="https://www.getblinky.io/" target="_blank" rel="noopener">Blinky&lt;/a> and &lt;a href="https://github.com/matryer/xbar" target="_blank" rel="noopener">xbar for MacOS&lt;/a>. Users can customize configurations, crypted by &lt;a href="https://github.com/getsops/sops" target="_blank" rel="noopener">SOPS&lt;/a>/&lt;a href="https://github.com/FiloSottile/age" target="_blank" rel="noopener">Age&lt;/a>, and integrate it into their systems using specific commands provided in the repository. This open-source project is licensed under the MIT Licenseâ€‹. For more details, you can visit the repository &lt;a href="https://github.com/davidaparicio/ambari-to-opsgenie/" target="_blank" rel="noopener">here&lt;/a>.&lt;/p></description></item><item><title>URL Checker</title><link>/project/cuc/</link><pubDate>Sat, 18 Mar 2023 00:00:00 +0000</pubDate><guid>/project/cuc/</guid><description>&lt;p>CUC (English pronunciation: [&lt;em>cuc&lt;/em>] / Î»ÎµÏ…ÎºÏŒÏ‚) is a very simple CLI tool to check various HTTP status for example if a webpage is available (200) or not found (404).&lt;/p>
&lt;blockquote>
&lt;p>It&amp;rsquo;s delicious like a &lt;a href="https://en.wikipedia.org/wiki/TUC_%28cracker%29" target="_blank" rel="noopener">TUC&lt;/a> (cracker), Biscuit of the French company LU, but with a C, for the &lt;a href="https://en.wikipedia.org/wiki/Command-line_interface" target="_blank" rel="noopener">Console&lt;/a>.&lt;/p>
&lt;/blockquote></description></item><item><title>Namecheck</title><link>/project/namecheck/</link><pubDate>Wed, 31 Aug 2022 00:00:00 +0000</pubDate><guid>/project/namecheck/</guid><description>&lt;p>A very simple command line tool and server to check the availability of a nickname/handle on Twitter and GitHub. This toyproject is used for my demos at conferences like &lt;a href="/talk/la-securite-des-le-debut-de-la-conception-dun-projet/">Security from the beginning of the design of a project&lt;/a> as well as for the article Programmez! Hors sÃ©rie #8. This Go application is a fork of the opensource project of &lt;a href="https://github.com/jub0bs/" target="_blank" rel="noopener">@jub0bs&lt;/a>, also available on &lt;a href="https://github.com/jub0bs/namecheck" target="_blank" rel="noopener">GitHub&lt;/a>.&lt;/p></description></item><item><title>Voivi</title><link>/project/voivi/</link><pubDate>Mon, 27 Feb 2017 00:00:00 +0000</pubDate><guid>/project/voivi/</guid><description>&lt;p>This multi-cloud project was created to put into practice SMPC (Secure Multiparty Computation) techniques, TOR (Onion Routing) network as well as privacy preservation mechanisms (Zero-trust) to test the hypotheses of the thesis. The application was used during the &lt;a href="https://en.wikipedia.org/wiki/2016_United_States_presidential_debates" target="_blank" rel="noopener">2016 U.S. Presidential Debates&lt;/a> by measuring in real time, all the tweets on the Twitter platform on the topic (analysis of topics/themes and favorable or unfavorable sentiment towards one of the candidates). During the second debate, in the space of 48 hours, the service processed 1.78 billion tweets, representing more than 15GB, spread across AWS/GCP/Azure/Heroku clouds. To handle this volume with little latency, an auto-scaling mechanism was implemented. Finally, I have scripted the deployment and execution in order to facilitate the DevOps method.&lt;/p>
&lt;p>Technical Stack Details:&lt;/p>
&lt;ul>
&lt;li>AWS, GCP, Azure and Heroku&lt;/li>
&lt;li>Vert.X 3.3.3, with Hazelcast 3.7.2&lt;/li>
&lt;li>Maven 3.5.1 and SLJF4j 1.7.21&lt;/li>
&lt;li>JUnit 4.12, REST-assured 3.0, Assertj 3.5.1&lt;/li>
&lt;li>JClouds 1.9.2&lt;/li>
&lt;li>Kubernetes 1.14 (May 2019) and the first tests of Ubernetes (K8s Federation)&lt;/li>
&lt;li>MongoDB 1.50.5&lt;/li>
&lt;li>Stanford NLP 3.6&lt;/li>
&lt;/ul>
&lt;div class="alert alert-note">
&lt;div>
Nowadays, reputation systems are crucial for distributed applications in which users have to be made accountable for their actions, such as e-commerce websites or voting electronic. However, existing systems often disclose the identity of the raters, which might deter honest users from posting reviews, out of fear of retaliation from the ratees. While many privacy-preserving reputation systems have been proposed, none of them was at the same time truly decentralized, trustless, and suitable for real world usage in, for example, e-commerce applications. After discussing the weaknesses and shortcoming of existing solutions, we will present our own blockchain-based trustless reputation system, and analyze its correctness and the security guarantees it promises.[&amp;hellip;]
&lt;/div>
&lt;/div></description></item></channel></rss>